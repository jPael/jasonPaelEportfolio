<title>
	MONOSPACE: FLIPS DOTS WITH FEELINGS a 1kb JavaScript demo by p01/RIBBON
</title>
<style>
	body {
		background: #000;
		font: 0px MONOSPACE;
	}
	canvas {
		width: 100%;
		height: 100%;
	}
</style>
<canvas id="c"
	><script>
		b = c.getContext`2d`;
	</script>
	<script>
		onload = () => {
			c.width = 1920;
			c.height = 1080;
			c.style.background = "radial-gradient(#222,black)";
			b.fillStyle = "#fff";
			b.font = "920 128px MONOSPACE";
			b.textAlign = "center";
			let y = 384;
			b.fillText("MONOSPACE", 960, y);
			y += 32;
			b.font = "920 25px MONOSPACE";
			b.fillText("F L I P   D O T S   W I T H   F E E L I N G S", 960 - 4, y);
			y += 32;
			y += 32;
			b.fillStyle = "#666";
			b.fillText("1 K B   D E M O   b y   P 0 1 / R I B B O N", 960 - 4, y);
			y += 32;
			b.fillText("f o r   A S S E M B L Y   2 0 2 0", 960 - 4, y);
			y += 32;
			y += 32;
			y += 32;
			y += 32;
			b.fillStyle = "#fff";
			b.fillText("C L I C K   T O   S T A R T", 960 - 4, y);
			y += 32;
			onclick = () => {
				onclick = null;
				(d = [
					2280,
					1280,
					1520,
					(c.width = 1920),
					(document.body.style.font = "0px MONOSPACE"),
				]),
					(g = new (window.webkitAudioContext || window.AudioContext)()),
					(o = g.createScriptProcessor(
						4096,
						(document.body.style.margin = t = n = 0),
						1
					)),
					o.connect(g.destination),
					(o.onaudioprocess = (o) => {
						o = o.outputBuffer.getChannelData(
							(e = Math.sin(
								(t / 16) % 1,
								(m =
									Math.sin(Math.min(1, (y = t / 128)) * Math.PI) ** 0.5 + 0.1),
								(c.height = 1080),
								(b.shadowOffsetY = 32420),
								(c.style.background =
									"radial-gradient(#" +
									[333, 333, 333, 333, 155, 155, 102, 102][(t / 16) & 7] +
									",black"),
								(b.font = "920 32px MONOSPACE"),
								(f = [
									(x, y, t) => (x / y) * 2 - t,
									(x, y, t) => (x ** 2 + y ** 2) ** 0.5 - t,
									(x, y, t) => (x / 4) ^ (y / 4 - t),
									(x, y, t) => (y % x) - t,
								][(t / 16) & 3]),
								(u =
									"" +
									[
										[
											,
											f,
											f,
											" CAN YOU HEAR ME",
											f,
											f,
											,
											"MONOSPACE",
											"THE END",
										][(t / 16) | 0],
									]),
								t > n &&
									speechSynthesis.speak(
										new SpeechSynthesisUtterance(u, (n += 16))
									)
							))
						);
						for (i = 0; 4096 > 4 * i; i++)
							(g[i] = r =
								((f((x = 16 - (i % 32)), (a = 16 - ((i / 32) | 0)), t) / 2) &
									1) +
								(g[i] || 0) / 2),
								(x += o[0] / 4 + 4 * (1 - m ** 0.3) * Math.sin(i + t + 8)),
								(a += o[64] / 4 + 4 * (1 - m ** 0.3) * Math.sin(i + t)),
								(h = x * Math.sin(y * 2 + 8) + a * Math.sin(y * 2)),
								(p = 4096 / (m * 32 + 4 * h * Math.sin(e) + (t % 16))),
								b.beginPath((f[i] = r / p)),
								b.arc(
									h * Math.sin(e + 8) * p + 1280,
									x * Math.sin(y * 2) * p - a * Math.sin(y * 2 + 8) * p - 31920,
									p > 0 && p / (2 + 32 - r * 16),
									0,
									8
								),
								(b.shadowBlur = o[0] ** 2 * 32 + 32 - m * 32 + 4 + (h * h) / 2),
								(b.shadowColor =
									"hsl(" +
									[
										f(x, y, t) & 2 ? t - a * 8 : 180,
										(t & 64) * m + "%",
										(t & 64) * m + "%",
									]),
								b.fill();
						(b.shadowBlur = o[0] ** 2 * 32), (b.shadowColor = "#fee");
						for (i = 0; 4096 > i; i++)
							(o[i] =
								o[i] / 2 +
								((Math.sin(
									t *
										d[
											(t / [4, 4, 4, 4, 1 / 4, 1 / 4, 16, 4][(t / 16) & 7]) & 3
										] *
										Math.PI
								) *
									8 +
									(((t * d[(t / 8) & 3]) / 2) & 6) +
									(((t * d[(t / 16) & 3]) / 4) % 6)) /
									64 +
									f[(i / 4) | 0]) *
									m),
								(64 > i) & ((t % 16) * 6 > i) &&
									b.fillText(
										[u[i + ((o[i] * 2) & 1)]],
										(i % 9) * 32 + o[0] * 16 + 180,
										((i / 9) | 0) * 64 + o[64] * 16 - t - 31920
									),
								(t += 1 / g.sampleRate);
					});
			};
		};
	</script></canvas
>
